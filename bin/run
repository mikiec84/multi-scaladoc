#!/bin/bash

function help {
  echo "This script generates Scaladoc for this project's subprojects.
SBT and git must be installed for this script to work, and the generated Scaladoc will look better if graphviz is installed.
To see the help information for this program, type:
    bin/run -h
    
To run this script in debug mode so a debugger can remotely attach to it, use the -d option:
    bin/run -d

When not running in debug mode, this script builds a fat jar, which takes longer the first time it runs, but speeds up subsequent invocations.
The -j option forces a rebuild of the jar:
    bin/run -j
"
  # Do not exit; let the program run so it can display it's help message
}

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."
cd "$DIR"


if [ "$1" == "-h" ]; then help; fi


ENTRY="com.micronautics.publish.Main"

COPYRIGHT="--copyright \"&copy; Copyright 2017 Micronautics Research Corporation.\""
DRY_RUN="--dryRun "                  # comment this out for production
GITHUB_NAME="--gitHubName mslinn"
KEEP_AFTER="--keepAfterUse"         # comment this out for production
PRESERVE_INDEX="--preserveIndex"
REMOTE_URL="--gitRemoteOriginUrl \"git@github.com:mslinn/web3j-scala.git\""
SUB_PROJECTS="--subProjectNames root,demo"

OPTIONS="$COPYRIGHT $DRY_RUN $KEEP_AFTER $GITHUB_NAME $PRESERVE_INDEX $REMOTE_URL $SUB_PROJECTS"

# Scan build.sbt for program name, Scala version and program version
function findValue {
  echo "$( grep "$1 :=" build.sbt | cut -d' ' -f 3 | tr -d \" )"
}

function SCALA_VERSION {
  V=`grep "scalaVersion :=" build.sbt |  cut -d' ' -f 3 | tr -d \"`
   case $V in
    2.10.*) echo 2.10 ;;
    2.11.*) echo 2.11 ;;
    2.12.*) echo 2.12 ;;
    2.13.*) echo 2.13 ;;
     3.0.*)  echo 3.0 ;;
     3.1.*)  echo 3.1 ;;
         *) echo UNKNOWN ;;
  esac
}

function runFatJar {
  NAME="$( findValue name )"
  VERSION="$( findValue version )"
  JAR=target/scala-`SCALA_VERSION`/$NAME-assembly-$VERSION.jar
  
  if [ "$1" == -j ] || [ ! -f $JAR ]; then
    echo "Building $JAR"
    sbt assembly
  
    if [ "$1" == -j ]; then shift; fi
  fi
  
  java -cp "$JAR" "$ENTRY" "$@"
}

if [ "$1" == "-d" ]; then
  shift
  DEBUG="-jvm-debug 5005"
  sbt $DEBUG "runMain $ENTRY $OPTIONS $*"
else
  runFatJar "$@"
fi
